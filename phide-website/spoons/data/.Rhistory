if(r <= 796/10000) {
case1 <- c(case1, 0)
case2 <- c(case2, 1)
}
next
else if (r >= 796/10000 && r <= (796/10000 + 9187/10000)) {
case1 <- c(case1, FALSE)
case2 <- c(case2, TRUE)
}
else {
case1 <- c(case1, FALSE)
case2 <- c(case2, FALSE)
}
}
n <- 5000
case1 <- c()
case2 <- c()
for (i in n) {
r <- runif(1)
if(r <= 796/10000) {
case1 <- c(case1, 0)
case2 <- c(case2, 1)
}
next
else if (r >= 796/10000 && r <= (796/10000 + 9187/10000)) {
case1 <- c(case1, FALSE)
case2 <- c(case2, TRUE)
}
else {
case1 <- c(case1, FALSE)
case2 <- c(case2, FALSE)
}
}
n <- 5000
case1 <- c()
case2 <- c()
for (i in n) {
r <- runif(1)
if(r <= 796/10000) {
case1 <- c(case1, 0)
case2 <- c(case2, 1)
}
}
for (i in 1:n) {
r <- runif(1)
if(r <= 796/10000) {
case1 <- c(case1, 0)
case2 <- c(case2, 1)
}
else if (r >= 796/10000 && r <= (796/10000 + 9187/10000)) {
case1 <- c(case1, FALSE)
case2 <- c(case2, TRUE)
}
else {
case1 <- c(case1, FALSE)
case2 <- c(case2, FALSE)
}
}
n <- 5000
case1 <- c()
case2 <- c()
for (i in 1:n) {
r <- runif(1)
if(r <= 796/10000) {
case1 <- c(case1, TRUE)
case2 <- c(case2, FALSE)
}
else if (r >= 796/10000 && r <= (796/10000 + 9187/10000)) {
case1 <- c(case1, FALSE)
case2 <- c(case2, TRUE)
}
else {
case1 <- c(case1, FALSE)
case2 <- c(case2, FALSE)
}
}
P1 <- sum(case1) / n
P2 <- sum(case2) / n
P12 <- P1 / (P1 + P2)
P12
P12 <- sum(case1) / (sum(case1) + sum(case2))
P12
n <- 500
events <- matrix(nrow=0, ncol=2)
for(i in 1:n) {
events <- rbind(events, runif(2))
break
}
x <- sapply(1:n, FUN=function(x) runif(2))
View(x)
x <- mapply(1:n, FUN=function(x) runif(2))
View(x)
x <- lapply(1:n, FUN=function(x) runif(2))
View(x)
y <- matrix(x)
View(y)
x <- apply(1:n, FUN=function(x) runif(2))
n <- 500
events <- matrix(nrow=0, ncol=2)
x <- apply(1:n, FUN=function(x) runif(2))
x <- apply(1:n, FUN=function(x) runif(2))
x <- apply(1:n, 2, FUN=function(x) runif(2))
x <- apply(1:n, 2, runif(2))
x <- apply(1:n, 2, runif)
x <- sapply(1:n, FUN=function(x) runif(2))
events[,1] <- x[1,]
n <- 500
events <- matrix(nrow=n, ncol=2)
x <- sapply(1:n, FUN=function(x) runif(2))
events[,1] <- x[1,]
View(events)
events[,2] <- x[2,]
View(x)
Pa <- (events[,1] + events[,2]) < 1
Pb <- (events[,1] - events[,2]) < 0
library(ggplot2)
ggplot(data = events)
events <- data.frame(nrow=n, ncol=2)
x <- sapply(1:n, FUN=function(x) runif(2))
events[,1] <- x[1,]
events <- data.frame(matrix(nrow=n, ncol=2))
x <- sapply(1:n, FUN=function(x) runif(2))
events[,1] <- x[1,]
events[,2] <- x[2,]
ggplot(data = events)
names(events) <- c("x", "y")
ggplot(data = events, aes(x=x, y=y))
ggplot(data = events, aes(x=x, y=y)) + geom_point()
ggplot(data = events, aes(x=x, y=y)) + geom_point() + xlab("X") + ylab("Y") + title(main="Plot of (X,Y) for n=500")
ggplot(data = events, aes(x=x, y=y)) + geom_point() + xlab("X") + ylab("Y") + title(main="Plot of (X,Y) for n=500")
ggplot(data = events, aes(x=x, y=y)) + geom_point() + xlab("X") + ylab("Y") + labs(title="Plot of (X,Y) for n=500")
ggplot(data = events, aes(x=x, y=y)) + geom_point() + xlab("X") + ylab("Y") + labs(title="Plot of (X,Y) for n=500", x="X", y="y")
ggplot(data = events, aes(x=x, y=y)) + geom_point() + labs(title="Plot of (X,Y) for n=500", x="X", y="y")
ggplot(data = events, aes(x=x, y=y)) + geom_point() + labs(title="Plot of (X,Y) for n=500", x="X", y="Y")
events <- data.frame(matrix(nrow=n, ncol=3))
x <- sapply(1:n, FUN=function(x) runif(2))
events[,1] <- x[1,]
events[,2] <- x[2,]
names(events) <- c("x", "y")
ggplot(data = events, aes(x=x, y=y)) + geom_point() + labs(title="Plot of (X,Y) for n=500", x="X", y="Y")
Pa <- (events[,1] + events[,2]) < 1
Pb <- (events[,1] - events[,2]) < 0
as.numeric(TRUE)
as.numeric(FALSE)
events[,3] <- paste0( 4 - (as.numeric(Pa) + as.numeric(Pb) ))
View(events)
events[,3] <- paste0( 3 - (as.numeric(Pa) + 2*as.numeric(Pb) ))
n <- 500
events <- data.frame(matrix(nrow=n, ncol=3))
names(events) <- c("x", "y", "assignment")
x <- sapply(1:n, FUN=function(x) runif(2))
events[,1] <- x[1,]
events[,2] <- x[2,]
ggplot(data = events, aes(x=x, y=y)) + geom_point() + labs(title="Plot of (X,Y) for n=500", x="X", y="Y")
Pa <- (events[,1] + events[,2]) < 1
Pb <- (events[,1] - events[,2]) < 0
events[,3] <- paste0( 3 - (as.numeric(Pa) + 2*as.numeric(Pb) ))
ggplot(data = events, aes(x=x, y=y, fill=)) + geom_point() + labs(title="Plot of (X,Y) for n=500", x="X", y="Y")
ggplot(data = events, aes(x=x, y=y, fill=assignment)) + geom_point() + labs(title="Plot of (X,Y) for n=500", x="X", y="Y")
ggplot(data = events, aes(x=x, y=y)) + geom_point(col=assignment) + labs(title="Plot of (X,Y) for n=500", x="X", y="Y")
ggplot(data = events, aes(x=x, y=y)) + geom_point(col=assignment) + labs(title="Plot of (X,Y) for n=500", x="X", y="Y")
ggplot(data = events, aes(x=x, y=y)) + geom_point(aes(col=assignment)) + labs(title="Plot of (X,Y) for n=500", x="X", y="Y")
events[,3] <- paste0( 2 - (as.numeric(Pa) + 2*as.numeric(Pb) ))
ggplot(data = events, aes(x=x, y=y)) + geom_point(aes(col=assignment)) + labs(title="Plot of (X,Y) for n=500", x="X", y="Y")
events[,3] <- paste0( 4 - (as.numeric(Pa) + 2*as.numeric(Pb) ))
ggplot(data = events, aes(x=x, y=y)) + geom_point(aes(col=assignment)) + labs(title="Plot of (X,Y) for n=500", x="X", y="Y")
truth.assignment <- c("TT", "FT", "TF", "FF")
events[,3] <- sapply(events[,3], FUN=function(x) truth.assignment[x])
events[,3] <- sapply(events[,3], FUN=function(x) truth.assignment[as.numeric(x)])
events[,3] <- paste0( 4 - (as.numeric(Pa) + 2*as.numeric(Pb) ))
truth.assignment <- c("TT", "FT", "TF", "FF")
events[,3] <- sapply(events[,3], FUN=function(x) truth.assignment[as.numeric(x)])
ggplot(data = events, aes(x=x, y=y)) + geom_point(aes(col=assignment)) + labs(title="Plot of (X,Y) for n=500", x="X", y="Y")
ggplot(data = events, aes(x=x, y=y)) + geom_point(aes(shape=assignment)) + labs(title="Plot of (X,Y) for n=500", x="X", y="Y")
ggplot(data = events, aes(x=x, y=y)) + geom_point(aes(shape=assignment)) + labs(title="Plot of (X,Y) for n=500 with Truth Assignments Added", x="X", y="Y", )
ggplot(data = events, aes(x=x, y=y)) + geom_point(aes(shape=assignment)) + labs(title="Plot of (X,Y) for n=500 with Truth Assignments Added", x="X", y="Y")
n <- 500
events <- data.frame(matrix(nrow=n, ncol=3))
names(events) <- c("x", "y", "assignment")
truth.assignment <- c("TT", "FT", "TF", "FF")
x <- sapply(1:n, FUN=function(x) runif(2))
events[,1] <- x[1,]
events[,2] <- x[2,]
ggplot(data = events, aes(x=x, y=y)) + geom_point() + labs(title="Plot of (X,Y) for n=500", x="X", y="Y")
Pa <- (events[,1] + events[,2]) < 1
Pb <- (events[,1] - events[,2]) < 0
events[,3] <- paste0( 4 - (as.numeric(Pa) + 2*as.numeric(Pb) ))
events[,3] <- sapply(events[,3], FUN=function(x) truth.assignment[as.numeric(x)])
ggplot(data = events, aes(x=x, y=y)) + geom_point(aes(shape=assignment)) + labs(title="Plot of (X,Y) for n=500 with Truth Assignments Added", x="X", y="Y")
sum(Pa) / n
sum(Pb) / n
sum(Pa) / n
cat("P(A) = ", sum(Pa) / n)
cat("P(A | B) = ", ((length(events$assignment == "TT") / n) / (sum(Pb) / n)) )
length(events$assignment == "TT")
length(which(events$assignment == "TT"))
cat("P(A | B) = ", ((length(which(events$assignment == "TT")) / n) / (sum(Pb) / n)) )
n <- 500000
for(i in 1:n) {
x = runif(1);
A = c(A, (x < .5))
B = c(B, ((2*x) %% 1) < .5)
}
n <- 500000
A <- c()
B <- c()
for(i in 1:n) {
x = runif(1);
A = c(A, (x < .5))
B = c(B, ((2*x) %% 1) < .5)
}
Pa <- sum(A) / n
Pb <- sum(B) / n
i <- c(TRUE, TRUE, FALSE)
j <- c(FALSE, TRUE, FALSE)
i && j
i & j
Pab <- sum( A & B ) / n
cat("95% CI for P(A) = (", Pa - 1.96 * sqrt((Pa * (1-Pa))/n), ", ", Pa - 1.96 * sqrt((Pa * (1-Pa))/n) )
cat("95% CI for P(B) = (", Pb - 1.96 * sqrt((Pb * (1-Pa))/n), ", ", Pb - 1.96 * sqrt((Pb * (1-Pb))/n) )
cat("95% CI for P(A,B) = (", Pab - 1.96 * sqrt((Pab * (1-Pab))/n), ", ", Pab - 1.96 * sqrt((Pab * (1-Pab))/n) )
cat("95% CI for P(A) = ( ", Pa - 1.96 * sqrt((Pa * (1-Pa))/n), ", ", Pa - 1.96 * sqrt((Pa * (1-Pa))/n), " )" )
cat("95% CI for P(B) = ( ", Pb - 1.96 * sqrt((Pb * (1-Pa))/n), ", ", Pb - 1.96 * sqrt((Pb * (1-Pb))/n), " )" )
cat("95% CI for P(A,B) = ( ", Pab - 1.96 * sqrt((Pab * (1-Pab))/n), ", ", Pab - 1.96 * sqrt((Pab * (1-Pab))/n), " )" )
cat("95% CI for P(A) = ( ", Pa - 1.96 * sqrt((Pa * (1-Pa))/n), ", ", Pa + 1.96 * sqrt((Pa * (1-Pa))/n), " )" )
cat("95% CI for P(B) = ( ", Pb - 1.96 * sqrt((Pb * (1-Pa))/n), ", ", Pb + 1.96 * sqrt((Pb * (1-Pb))/n), " )" )
cat("95% CI for P(A,B) = ( ", Pab - 1.96 * sqrt((Pab * (1-Pab))/n), ", ", Pab + 1.96 * sqrt((Pab * (1-Pab))/n), " )" )
sum(A) / n
sum( A & B ) / n
sum(B) / n
setwd("~/Documents/Github/Personal/phide-website/spoons/data")
mur <- read.csv('murder_list.csv')
View(mur)
vic <- read.csv('victims.csv')
View(vic)
names(vic) <- c('assassin', 'victim')
names(mur) <- c('date', 'victim')
el <- read.csv('eliminated.csv')
names(el) <- c('date', 'eliminated')
setdiff(mur$victim, vic$victim)
setdiff(vic$victim, mur$victim)
vic[65,2] <- "Nastya Yakovlyeva"
vic$victim <- as.character(vic$victim)
vic[65,2] <- "Nastya Yakovlyeva"
mur <- read.csv('murder_list.csv')
names(mur) <- c('date', 'victim')
vic <- read.csv('victims.csv')
names(vic) <- c('assassin', 'victim')
el <- read.csv('eliminated.csv')
names(el) <- c('date', 'eliminated')
setdiff(mur$victim, vic$victim)
setdiff(vic$victim, mur$victim)
vic$victim <- as.character(vic$victim)
vic[63,2] <- "Nastya Yakovlyeva"
mur$victim <- as.character(mur$victim)
mur[55,2] <- "Nastya Yakovlyeva"
comb <- merge(vic, mur, by=victim)
comb <- merge(vic, mur, by="victim")
View(comb)
comb[64,] <- c("10/22/19", "Sitha Vallabhaneni", "Ben Kelly")
comb[,1] <- as.character(comb[,1])
comb[,2] <- as.character(comb[,2])
comb[,3] <- as.character(comb[,3])
comb[64,] <- c("10/22/19", "Sitha Vallabhaneni", "Ben Kelly")
comb[64,] <- c("Sitha Vallabhaneni", "Ben Kelly", "10/22/19")
write.csv(comb, file="combined-results.tsv", sep="\t", row.names = FALSE)
write.csv(comb, file="combined-results.tsv", sep="\t", row.names = FALSE)
write.table(comb, file="combined-results.tsv", sep="\t", row.names = FALSE)
x <- read.csv("combined-results.tsv")
View(comb)
equal(x, comb)
all.equal(x, comb)
View(x)
x <- read.csv("combined-results.tsv", "\t")
x <- read.csv("combined-results.tsv", sep="\t")
all.equal(x, comb)
x <- read.csv("combined-results.tsv", sep="\t", stringsAsFactors=FALSE)
all.equal(x, comb)
people.num.kills <- aggregate(spoons, by="assassin", FUN=sum)
spoons <- read.csv("combined-results.tsv", sep="\t", stringsAsFactors=FALSE)
people.num.kills <- aggregate(spoons, by="assassin", FUN=sum)
people.num.kills <- aggregate(spoons, by=c("assassin"), FUN=sum)
people.num.kills <- aggregate(spoons, by=list("assassin"), FUN=sum)
people.num.kills <- table(spoons$assassin)
people.num.kills
library(ggplot2)
ggplot(spoons, aes(x=assassin))
people.num.kills <- people.num.kills > 3
people.num.kills
people.num.kills <- table(spoons$assassin)
people.num.kills <- people.num.kills[people.num.kills > 3]
people.num.kills
people.num.kills <- table(spoons$assassin)
people.num.kills <- people.num.kills[people.num.kills > 2]
ggplot(spoons, aes(x=assassin))
people.num.kills
x <- data.frame(assassin=names(people.num.kills), kills=people.num.kills)
ggplot(x, aes(x=assassin))
ggplot(x, aes(x=assassin, y=count))
ggplot(x, aes(x=assassin, y=kills))
x <- data.frame(assassin=names(people.num.kills), kills=people.num.kills)
ggplot(x, aes(x=assassin, y=kills))
ggplot(x, aes(x=assassin)) + geom_histogram(binwidth=1)
ggplot(x, aes(x=assassin)) + geom_histogram()
ggplot(x, aes(x=assassin)) + geom_histogram(stat="count")
View(x)
people.num.kills
people.num.kills$freq
x <- data.frame(assassin=names(people.num.kills), kills=as.numeric(people.num.kills))
ggplot(x, aes(x=assassin, y=kills))
ggplot(x, aes(x=assassin, y=kills)) + geom_bar(stat="identity")
people.num.kills <- people.num.kills[people.num.kills > 1]
x <- data.frame(assassin=names(people.num.kills), kills=as.numeric(people.num.kills))
ggplot(x, aes(x=assassin, y=kills)) + geom_bar(stat="identity")
people.num.kills <- table(spoons$assassin)
people.num.kills <- people.num.kills[people.num.kills > 1]
x <- data.frame(assassin=names(people.num.kills), kills=as.numeric(people.num.kills))
ggplot(x, aes(x=assassin, y=kills)) + geom_bar(stat="identity")
people.num.kills <- table(spoons$assassin)
x <- people.num.kills[people.num.kills > 1]
x <- data.frame(assassin=names(x), kills=as.numeric(x))
ggplot(x, aes(x=assassin, y=kills)) + geom_bar(stat="identity")
ggplot(x, aes(x=assassin, y=kills)) + geom_bar(stat="identity") + labs(title="Number of kills by assassin (kills > 1)", x="Assassin name")
ggplot(x, aes(x=assassin, y=kills)) + geom_bar(stat="identity") + labs(title="Number of kills by assassin (kills > 1)", x="Assassin Name", y "Number of Kills")
ggplot(x, aes(x=assassin, y=kills)) + geom_bar(stat="identity") + labs(title="Number of kills by assassin (kills > 1)", x="Assassin Name", y= "Number of Kills")
ggplot(x, aes(x=assassin, y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") +
ggplot(x, aes(x=assassin, y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills")
ggplot(x, aes(x=assassin, y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills")
ggplot(x, aes(x=assassin, y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(x, aes(x=reorder(assassin), y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(x, aes(x=reorder(assassin, -kills), y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot the number of kills per day
ggplot(spoons, aes(x=date, y=victum)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(spoons)
# Plot the number of kills per day
ggplot(spoons, aes(x=date, y=victim)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot the number of kills per day
people.num.kills <- table(spoons$date)
x <- people.num.kills[people.num.kills > 1]
# Plot the number of kills per day
people.num.kills <- table(spoons$date)
ggplot(x, aes(x=date, y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot the number of kills per day
people.num.kills <- table(spoons$date)
x <- data.frame(date=names(x), kills=as.numeric(x))
ggplot(x, aes(x=date, y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot the number of kills per day
x <- table(spoons$date)
x <- data.frame(date=names(x), kills=as.numeric(x))
ggplot(x, aes(x=date, y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(x)
# Plot the number of kills per day
x <- table(spoons$date)
spoons <- read.csv("combined-results.tsv", sep="\t", stringsAsFactors=TRUE)
# Plot the number of kills per day
x <- table(spoons$date)
x <- data.frame(date=names(x), kills=as.numeric(x))
ggplot(x, aes(x=date, y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot the number of kills per day
x <- table(spoons$date)
x
mur <- read.csv('murder_list.csv')
names(mur) <- c('date', 'victim')
mur <- read.csv('murder_list.csv')
mur <- read.csv('murder_list.csv')
names(mur) <- c('date', 'victim')
mur <- read.csv('murder_list.csv')
names(mur) <- c('date', 'victim')
vic <- read.csv('victims.csv')
names(vic) <- c('assassin', 'victim')
el <- read.csv('eliminated.csv')
names(el) <- c('date', 'eliminated')
setdiff(mur$victim, vic$victim)
setdiff(vic$victim, mur$victim)
vic$victim <- as.character(vic$victim)
vic[63,2] <- "Nastya Yakovlyeva"
mur$victim <- as.character(mur$victim)
mur[55,2] <- "Nastya Yakovlyeva"
comb <- merge(vic, mur, by="victim")
comb[,1] <- as.character(comb[,1])
comb[,2] <- as.character(comb[,2])
comb[,3] <- as.character(comb[,3])
comb[64,] <- c("Sitha Vallabhaneni", "Ben Kelly", "10/22/19")
write.table(comb, file="combined-results.tsv", sep="\t", row.names = FALSE)
x <- read.csv("combined-results.tsv", sep="\t", stringsAsFactors=FALSE)
View(x)
spoons <- read.csv("combined-results.tsv", sep="\t", stringsAsFactors=TRUE)
people.num.kills <- table(spoons$assassin)
# Plot a histagram with number of kills per assassin
x <- people.num.kills[people.num.kills > 1]
x <- data.frame(assassin=names(x), kills=as.numeric(x))
ggplot(x, aes(x=reorder(assassin, -kills), y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot the number of kills per day
x <- table(spoons$date)
x <- data.frame(date=names(x), kills=as.numeric(x))
ggplot(x, aes(x=date, y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
x <- spoons[order(as.Date(spoons$date, format="%d/%m/%Y")),]
View(x)
x <- spoons[order(as.Date(spoons$date, format="%d/%m/%Y")),]
x <- spoons[order(as.Date(spoons$date, format="%m/%d/%Y")),]
View(comb)
mur <- read.csv('murder_list.csv')
names(mur) <- c('date', 'victim')
vic <- read.csv('victims.csv')
names(vic) <- c('assassin', 'victim')
el <- read.csv('eliminated.csv')
names(el) <- c('date', 'eliminated')
setdiff(mur$victim, vic$victim)
setdiff(vic$victim, mur$victim)
vic$victim <- as.character(vic$victim)
vic[63,2] <- "Nastya Yakovlyeva"
mur$victim <- as.character(mur$victim)
mur[55,2] <- "Nastya Yakovlyeva"
comb <- merge(vic, mur, by="victim")
comb[,1] <- as.character(comb[,1])
comb[,2] <- as.character(comb[,2])
comb[,3] <- as.character(comb[,3])
comb[64,] <- c("Sitha Vallabhaneni", "Ben Kelly", "10/22/1019")
write.table(comb, file="combined-results.tsv", sep="\t", row.names = FALSE)
x <- read.csv("combined-results.tsv", sep="\t", stringsAsFactors=FALSE)
spoons <- read.csv("combined-results.tsv", sep="\t", stringsAsFactors=TRUE)
x <- spoons[order(as.Date(spoons$date, format="%m/%d/%Y")),]
people.num.kills <- table(spoons$assassin)
# Plot a histagram with number of kills per assassin
x <- people.num.kills[people.num.kills > 1]
x <- data.frame(assassin=names(x), kills=as.numeric(x))
ggplot(x, aes(x=reorder(assassin, -kills), y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot the number of kills per day
x <- table(spoons$date)
x <- data.frame(date=names(x), kills=as.numeric(x))
ggplot(x, aes(x=date, y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
x <- spoons[order(as.Date(spoons$date, format="%m/%d/%Y")),]
spoons$days <- spoons$date - as.Date(spoons$date, format="%m/%d/%Y")
spoons <- read.csv("combined-results.tsv", sep="\t", stringsAsFactors=TRUE)
spoons$days <- as.Date(spoons$date, format="%m/%d/%Y") - as.Date("9/20/2019", format="%m/%d/%Y")
comb[64,] <- c("Sitha Vallabhaneni", "Ben Kelly", "10/22/2019")
write.table(comb, file="combined-results.tsv", sep="\t", row.names = FALSE)
mur <- read.csv('murder_list.csv')
names(mur) <- c('date', 'victim')
vic <- read.csv('victims.csv')
names(vic) <- c('assassin', 'victim')
el <- read.csv('eliminated.csv')
names(el) <- c('date', 'eliminated')
setdiff(mur$victim, vic$victim)
setdiff(vic$victim, mur$victim)
vic$victim <- as.character(vic$victim)
vic[63,2] <- "Nastya Yakovlyeva"
mur$victim <- as.character(mur$victim)
mur[55,2] <- "Nastya Yakovlyeva"
comb <- merge(vic, mur, by="victim")
comb[,1] <- as.character(comb[,1])
comb[,2] <- as.character(comb[,2])
comb[,3] <- as.character(comb[,3])
comb[64,] <- c("Sitha Vallabhaneni", "Ben Kelly", "10/22/2019")
write.table(comb, file="combined-results.tsv", sep="\t", row.names = FALSE)
spoons <- read.csv("combined-results.tsv", sep="\t", stringsAsFactors=TRUE)
spoons$days <- as.Date(spoons$date, format="%m/%d/%Y") - as.Date("9/20/2019", format="%m/%d/%Y")
x <- spoons[order(as.Date(spoons$date, format="%m/%d/%Y")),]
people.num.kills <- table(spoons$assassin)
# Plot a histagram with number of kills per assassin
x <- people.num.kills[people.num.kills > 1]
x <- data.frame(assassin=names(x), kills=as.numeric(x))
ggplot(x, aes(x=reorder(assassin, -kills), y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
spoons <- read.csv("combined-results.tsv", sep="\t", stringsAsFactors=TRUE)
spoons$days <- as.Date(spoons$date, format="%m/%d/%Y") - as.Date("9/20/2019", format="%m/%d/%Y")
spoons <- spoons[order(spoons$days),]
people.num.kills <- table(spoons$assassin)
# Plot a histagram with number of kills per assassin
x <- people.num.kills[people.num.kills > 1]
x <- data.frame(assassin=names(x), kills=as.numeric(x))
ggplot(x, aes(x=reorder(assassin, -kills), y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot the number of kills per day
x <- table(spoons$date)
x <- data.frame(date=names(x), kills=as.numeric(x))
ggplot(x, aes(x=date, y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(spoons, aes(x=date)) + geom_histogram() + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
x <- spoons
x$date <- factor(spoons$date, order=T)
ggplot(x, aes(x=date)) + geom_histogram() + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(x, aes(x=date)) + geom_histogram(stat="count") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(spoons)
spoons <- read.csv("combined-results.tsv", sep="\t", stringsAsFactors=TRUE)
spoons$days <- as.Date(spoons$date, format="%m/%d/%Y") - as.Date("9/20/2019", format="%m/%d/%Y")
spoons <- spoons[order(spoons$days),]
x <- spoons
x$date <- factor(spoons$date, order=T)
ggplot(x, aes(x=date)) + geom_histogram(stat="count") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(x, aes(x=days)) + geom_histogram(stat="count") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(spoons, aes(x=date)) + geom_histogram(binwidth=30, colour="white") + scale_x_date(labels = date_format("%Y-%b"), breaks = seq(min(spoons$date)-5, max(spoons$date)+5, 30), ylab("Frequency") + xlab("Year and Month") + theme_bw() + opts(axis.text.x = theme_text(angle=90))
ggplot(spoons, aes(x=date)) + geom_histogram(binwidth=30, colour="white") + scale_x_date(labels = date_format("%Y-%b"), breaks = seq(min(spoons$date)-5, max(spoons$date)+5, 30)), ylab("Frequency") + xlab("Year and Month") + theme_bw() + opts(axis.text.x = theme_text(angle=90))
ggplot(spoons, aes(x=date)) + geom_histogram(binwidth=30, colour="white") + scale_x_date(labels = date_format("%Y-%b"), breaks = seq(min(spoons$date)-5, max(spoons$date)+5, 30), limits = c(as.Date("2008-05-01"), as.Date("2012-04-01"))) + ylab("Frequency") + xlab("Year and Month") + theme_bw() + opts(axis.text.x = theme_text(angle=90))
ggplot(x, aes(x=days)) + geom_histogram(stat="count") + labs(title="Number of kills per day", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot a histagram with number of kills per assassin
x <- people.num.kills[people.num.kills > 1]
x <- data.frame(assassin=names(x), kills=as.numeric(x))
ggplot(x, aes(x=reorder(assassin, -kills), y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot the number of kills per day
x <- table(spoons$date)
x <- data.frame(date=names(x), kills=as.numeric(x))
x <- spoons
x$date <- factor(spoons$date, order=T)
ggplot(x, aes(x=days)) + geom_histogram(stat="count") + labs(title="Number of kills per day", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot a histagram with number of kills per assassin
x <- people.num.kills[people.num.kills > 1]
x <- data.frame(assassin=names(x), kills=as.numeric(x))
ggplot(x, aes(x=reorder(assassin, -kills), y=kills)) + geom_bar(stat="identity") + labs(title="Number of Kills by Assassin (kills > 1)", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Plot the number of kills per day
x <- table(spoons$date)
x <- data.frame(date=names(x), kills=as.numeric(x))
x <- spoons
x$date <- factor(spoons$date, order=T)
ggplot(x, aes(x=days)) + geom_histogram(stat="count") + labs(title="Number of kills per day", x="Assassin Name", y= "Number of Kills") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
